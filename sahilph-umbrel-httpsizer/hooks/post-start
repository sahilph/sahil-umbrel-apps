#!/usr/bin/env bash
set -euo pipefail

# Get the required variables
MYDIR="$(dirname "$(readlink -f "$0")")"
. "${MYDIR}/common-vars"

# Check if SSL folder exist, if not create

if [[ ! -d "${SSL_DIR}" ]]; then
        mkdir -p "${SSL_DIR}"
fi

# Check if SSL certificates exist, if not create

if [[ ! -f "${SSL_CERT_PATH}" && ! -f "${SSL_KEY_PATH}" ]]; then
	
	openssl req -x509 -nodes -newkey RSA:4096 -keyout "$SSL_ROOT_CA_KEY_PATH" -days 3650   -out "$SSL_ROOT_CA_CERT_PATH" -subj "/C=US/ST=CA/L=Earth/O=Umbrel Local/CN=root_CA_for_$CERT_CN"
	
	openssl req -nodes -newkey rsa:4096 -keyout "$SSL_KEY_PATH" -out "$SSL_CSR_PATH" -subj "/C=US/ST=CA/L=Earth/O=Umbrel Local/CN=$CERT_CN"
	
	openssl x509 -req -CA "$SSL_ROOT_CA_CERT_PATH" -CAkey "$SSL_ROOT_CA_KEY_PATH" -in "$SSL_CSR_PATH" -out "$SSL_CERT_PATH" -days 3650  -CAcreateserial -extfile <(printf "subjectAltName = DNS:*, DNS:$CERT_CN, DNS:localhost\nauthorityKeyIdentifier = keyid,issuer\nbasicConstraints = CA:FALSE\nkeyUsage = digitalSignature, keyEncipherment\nextendedKeyUsage=serverAuth")
	
fi
chown 1000:0 "${SSL_CERT_PATH}"
chown 1000:0 "${SSL_KEY_PATH}"
chmod 640 "${SSL_KEY_PATH}"


# Backup and modify the scripts/files
# This will backup the original scripts/files and modify them with the ones that support https


# Create backups directory structure is it doesnt exists

if [[ ! -d "${BACKUPS_LEGACY_COMPAT_DIR}" ]]; then
        mkdir -p "${BACKUPS_LEGACY_COMPAT_DIR}"
fi
#if [[ ! -d "${BACKUPS_SERVER_DIR}" ]]; then
#        mkdir -p "${BACKUPS_SERVER_DIR}"
#fi

# Backup and Modify app-proxy: Docker Compose File

if [[ ! -f "${BACKUP_APP_PROXY_DOCKER_COMPOSE_PATH}" ]]; then
  cp -a "${ORIGINAL_APP_PROXY_DOCKER_COMPOSE_PATH}" "${BACKUP_APP_PROXY_DOCKER_COMPOSE_PATH}"
  sed -i "s|${ORIGINAL_APP_PROXY_DOCKER_IMAGE}|${MODDED_APP_PROXY_DOCKER_IMAGE}|g" "${ORIGINAL_APP_PROXY_DOCKER_COMPOSE_PATH}"
  sed -i 's|volumes:|volumes:\n      - "${UMBREL_ROOT}/secrets/ssl:/ssl:ro"|' "${ORIGINAL_APP_PROXY_DOCKER_COMPOSE_PATH}"
fi

# Backup and Modify app-proxy: app.ts File

if [[ ! -f "${BACKUP_APP_TS_PATH}" ]]; then
  cp -a "${ORIGINAL_APP_TS_PATH}" "${BACKUP_APP_TS_PATH}"
  sed -i "s|${ORIGINAL_APP_PROXY_DOCKER_IMAGE}|${MODDED_APP_PROXY_DOCKER_IMAGE}|g" "${ORIGINAL_APP_TS_PATH}"
fi

# Backup and Modify app-auth: Docker Compose File

if [[ ! -f "${BACKUP_APP_AUTH_DOCKER_COMPOSE_PATH}" ]]; then
  cp -a "${ORIGINAL_APP_AUTH_DOCKER_COMPOSE_PATH}" "${BACKUP_APP_AUTH_DOCKER_COMPOSE_PATH}"
  sed -i "s|${ORIGINAL_APP_AUTH_DOCKER_IMAGE}|${MODDED_APP_AUTH_DOCKER_IMAGE}|g" "${ORIGINAL_APP_AUTH_DOCKER_COMPOSE_PATH}"
  sed -i -z 's|volumes:|volumes:\n      - "${UMBREL_DATA_DIR}/secrets/ssl:/ssl:ro"|2' "${ORIGINAL_APP_AUTH_DOCKER_COMPOSE_PATH}"
fi
